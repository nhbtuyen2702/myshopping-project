<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.shoppingcart</groupId>
  <artifactId>myshopping-project</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>myshopping-project</name>
  <description>myshopping-project</description>
  
  <!--
  <model>: Thẻ này định nghĩa một mô hình POM (Project Object Model) cho dự án. Nó chứa các thông tin về các module con, các bản phát hành và các plugin được sử dụng trong dự án.
  <groupId>: Định nghĩa một tên nhóm cho dự án, thường được sử dụng để phân loại các dự án tương tự.
  <artifactId>: Định nghĩa tên của dự án, là một phần của định danh duy nhất cho dự án (bao gồm cả groupId).
  <version>: Xác định phiên bản của dự án, được sử dụng để phân biệt các bản phát hành khác nhau của cùng một dự án.
  <name>: Tên của dự án, thường được sử dụng để hiển thị tên của dự án trong các công cụ quản lý dự án.
  <description>: Mô tả về dự án, giúp cho người đọc hiểu được mục đích và tính chất của dự án.
  -->
  
  <!-- 
  Trong Maven, "packaging" được sử dụng để chỉ định loại file được tạo ra sau khi quá trình build được hoàn thành. 
  Ba giá trị phổ biến nhất của "packaging" là "jar", "war" và "pom".
  
  <packaging>jar</packaging>, Maven sẽ tạo ra một file .jar, đóng gói tất cả các phụ thuộc của ứng dụng vào file jar đó.
  File jar này có thể được chạy bằng cách sử dụng lệnh java -jar <tên-file.jar>.
  
  <packaging>war</packaging> sẽ tạo ra một file .war, là một file đóng gói của các tài nguyên web, 
  bao gồm các file HTML, JSP, servlet, file class và các file tài nguyên khác, để triển khai trên một máy chủ web.
  war thường được dùng khi triển khai lên một server web như Tomcat
  
  <packaging>pom</packaging>, Maven không tạo ra bất kỳ file jar hoặc war nào, thay vào đó sẽ tạo ra một file pom.xml trống
  để sử dụng làm file cha để đóng gói các module con.
  
  Vì vậy, nếu dự án của bạn chỉ là một module con, hoặc một module mà không có mã nguồn để đóng gói, 
  bạn có thể sử dụng <packaging>pom</packaging>. 
  Nếu bạn có mã nguồn và muốn đóng gói thành một file jar để chạy, bạn nên sử dụng <packaging>jar</packaging>.
   -->
  
  
  
  <modules> <!-- khai báo modules chứa các project con bên trong -->
  	<module>myshopping-common</module>
  	<module>myshopping-webparent</module>
  </modules>
  
</project>